name: test
on: [push]

jobs:
  test:
    strategy:
      matrix:
        go-version: [^1]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: "on"
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Go modules
        run: go mod download

      - name: Storage S3 Backend Tests
        env:
          KNOXITE_AMAZONS3_URL: ${{ secrets.KNOXITE_AMAZONS3_URL }}
        run: |
          ./admin/setup_s3_test_environment.sh
          go test -v -count=1 -tags "ci backend" -covermode atomic -coverprofile=s3.cov ./storage/s3

      - name: Storage SFTP Backend Tests
        env:
          KNOXITE_SFTP_URL: ${{ secrets.KNOXITE_SFTP_URL }}
        run: |
          ./admin/setup_sftp_test_environment.sh
          go test -v -count=1 -tags "ci backend" -covermode atomic -coverprofile=sftp.cov ./storage/sftp

      - name: Storage FTP Backend Tests
        env:
          KNOXITE_FTP_URL: ${{ secrets.KNOXITE_FTP_URL }}
        run: |
          ./admin/setup_ftp_test_environment.sh
          go test -v -count=1 -tags "ci backend" -covermode atomic -coverprofile=ftp.cov ./storage/ftp

      - name: Storage WebDav Backend Tests
        env:
          KNOXITE_WEBDAV_URL: ${{ secrets.KNOXITE_WEBDAV_URL }}
        run: |
          ./admin/setup_webdav_test_environment.sh
          go test -v -count=1 -tags "ci backend" -covermode atomic -coverprofile=webdav.cov ./storage/webdav

      - name: Storage Dropbox Backend Tests
        env:
          KNOXITE_DROPBOX_URL: ${{ secrets.KNOXITE_DROPBOX_URL }}
        run: go test -v -count=1 -tags "ci backend" -covermode atomic -coverprofile=dropbox.cov ./storage/dropbox

      - name: Storage Azure File Backend Tests
        env:
          KNOXITE_AZURE_FILE_URL: ${{ secrets.KNOXITE_AZURE_FILE_URL }}
        run: go test -v -count=1 -tags "ci backend" -covermode atomic -coverprofile=azure.cov ./storage/azure

      - name: Storage Mega Backend Tests
        env:
          KNOXITE_MEGA_URL: ${{ secrets.KNOXITE_MEGA_URL }}
        run: go test -v -count=1 -tags "ci backend" -covermode atomic -coverprofile=mega.cov ./storage/mega

      - name: Storage Google Cloud Backend Tests
        env:
          KNOXITE_GOOGLECLOUD_URL: ${{ secrets.KNOXITE_GOOGLECLOUD_URL }}
          KNOXITE_GC_KEY_CLIENT_EMAIL: ${{ secrets.KNOXITE_GC_KEY_CLIENT_EMAIL }}
          KNOXITE_GC_KEY_CLIENT_ID: ${{ secrets.KNOXITE_GC_KEY_CLIENT_ID }}
          KNOXITE_GC_KEY_CLIENT_X509_CERT_URL: ${{ secrets.KNOXITE_GC_KEY_CLIENT_X509_CERT_URL }}
          KNOXITE_GC_KEY_PRIVATE_KEY_ID: ${{ secrets.KNOXITE_GC_KEY_PRIVATE_KEY_ID }}
          KNOXITE_GC_KEY_PRIVATE_KEY: ${{ secrets.KNOXITE_GC_KEY_PRIVATE_KEY }}
          KNOXITE_GC_KEY_PROJECT_ID: ${{ secrets.KNOXITE_GC_KEY_PROJECT_ID }}
        run: go test -v -count=1 -tags "ci backend" -covermode atomic -coverprofile=googlecloud.cov ./storage/googlecloud

      - name: Storage Backblaze B2 Backend Tests
        env:
          KNOXITE_BACKBLAZE_URL: ${{ secrets.KNOXITE_BACKBLAZE_URL }}
        run: go test -v -count=1 -tags "ci backend" -covermode atomic -coverprofile=backblaze.cov ./storage/backblaze

      - name: Coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          GO111MODULE=off go get github.com/mattn/goveralls
          GO111MODULE=off go get github.com/wadey/gocovmerge
          go test -race -covermode atomic -coverprofile=profile.cov ./...

          $(go env GOPATH)/bin/gocovmerge *.cov > combined.cov
          $(go env GOPATH)/bin/goveralls -coverprofile=combined.cov -service=github
